@startuml
'https://plantuml.com/component-diagram

node "Client (via HTTP)"{
    () request
    () response
}


node "Backend Infrastructure 1"{

    package "Node-js" {

        package "Express-js" {
            frame "control flow orchestrator"{
                [Server]
            }

            frame "middleware"{
                [JSON parser]
                [LoggerMiddleware]
            }

            frame "routes"{
                [AccountRoute]
                [AuthRoute]
                [CartRoute]
                [OrderRoute]
                [ProductRoute]
            }

            [AuthMiddleware]

            node "ErrorMiddleware"{
            }

        }
    }
}

node "Business Logic"{

    frame "controllers"{
        [AccountController]
        [AuthController]
        [CartController]
        [ProductController]
        [CheckoutController]
    }

    frame "models"{
        [AccountModel]
        [CartModel]
        [ProductModel]
        [OrderModel]
    }
}

node "Backend Infrastructure 2"{
    [Mongoose]

    frame "repositories"{
        [AccountRepository]
        [CartRepository]
        [ProductRepository]
        [UserRepository]
    }

    database "MongoDB" {
    }

}

request -down-> [Server]
[Server] -up-> response

[Server] -down-> "middleware"

"middleware" -right-> [ErrorMiddleware]
"routes" -up-> [ErrorMiddleware]
[ErrorMiddleware] <-right-> [Server]

"middleware" -down-> "routes"

[AuthMiddleware] <-down-> [AuthRoute]
[AuthRoute] <--> [AuthController]

[AccountRoute] -down-> [AccountController]
[CartRoute] -down-> [CartController]
[OrderRoute] -down-> [CheckoutController]
[ProductRoute] -down-> [ProductController]

"controllers" -right-> [Server]

"controllers" <..> "models" : First getting data schemes

"controllers" <--> [Mongoose] : Then heading to DB
[Mongoose] <-down-> "repositories" : Conversing with backend persistence layer
"repositories" <-down-> "MongoDB"























@enduml